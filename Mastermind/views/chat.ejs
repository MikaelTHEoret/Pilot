<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chat with Mastermind AI</title>
    <link rel="stylesheet" href="/css/style.css"> <!-- No . before /css -->
</head>
<body>
    <div id="chat-interface" class="chat-container">
        <header class="chat-header">
            <h1>Chat with Mastermind AI</h1>
        </header>
        <section class="chat-messages" id="chat-messages">
            <!-- Messages will be displayed here -->
        </section>
        <section class="chat-form">
            <input type="text" id="message-input" class="chat-input" placeholder="Type a message...">
            <button type="button" id="send-button" class="chat-submit">Send</button>
        </section>
    </div>
    <footer class="chat-footer">
        <p>Â© 2024 Mastermind. All rights reserved.</p>
    </footer>
    <script src="/utils-chatWebSocket.js"></script> <!-- Update with the correct path -->
</body>
</html>


<script>
    const socket = new WebSocket('ws://localhost:3001');
    
    // WebSocket event listeners
    socket.onopen = () => {
        console.log('WebSocket connection established');
    };
    
    socket.onmessage = (event) => {
    const message = JSON.parse(event.data); // Assuming the server sends JSON
    console.log('Message received from server:', message);
    const messageElement = document.createElement('div');
    messageElement.textContent = message.message; // Adjust depending on the message format
    document.getElementById('chat-messages').appendChild(messageElement);
};

    
    socket.onerror = (error) => {
        console.error('WebSocket error:', error.message, error.stack);
        // Add code here for error handling
    };

    // WebSocket error event listener
    socket.onclose = (event) => {
        console.error('WebSocket connection closed unexpectedly:', event.code, event.reason);
        // Add code here for handling unexpected WebSocket closure
    };

    // Additional WebSocket error handling
    socket.addEventListener('error', (event) => {
        console.error('WebSocket encountered an error:', event.message, event.error);
    });
    document.getElementById('send-button').addEventListener('click', () => {
    const messageInput = document.getElementById('message-input');
    const message = messageInput.value;
    if (message) {
        socket.send(JSON.stringify({ message }));
        messageInput.value = ''; // Clear the input after sending
    }
});

</script>